{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_shortsTracker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minExecutionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "CancelDecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "CancelIncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        }
      ],
      "name": "CreateDecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        }
      ],
      "name": "CreateIncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "referralCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "DecreasePositionReferral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "ExecuteDecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "orderProps",
          "type": "bytes"
        }
      ],
      "name": "ExecuteIncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "referralCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "IncreasePositionReferral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBlockDelayKeeper",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minTimeDelayPublic",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTimeDelay",
          "type": "uint256"
        }
      ],
      "name": "SetDelayValues",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositFee",
          "type": "uint256"
        }
      ],
      "name": "SetDepositFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increasePositionBufferBps",
          "type": "uint256"
        }
      ],
      "name": "SetIncreasePositionBufferBps",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "SetIsLeverageEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "longSizes",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "shortSizes",
          "type": "uint256[]"
        }
      ],
      "name": "SetMaxGlobalSizes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minExecutionFee",
          "type": "uint256"
        }
      ],
      "name": "SetMinExecutionFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "referralStorage",
          "type": "address"
        }
      ],
      "name": "SetReferralStorage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increasePositionRequestKeysStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decreasePositionRequestKeysStart",
          "type": "uint256"
        }
      ],
      "name": "SetRequestKeysStartValues",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "SetTrustedForwarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFees",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TRAILING_STOP_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "cancelDecreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "cancelIncreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withdrawETH",
          "type": "bool"
        }
      ],
      "name": "createDecreasePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_referralCode",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_orderProps",
          "type": "bytes"
        }
      ],
      "name": "createIncreasePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_referralCode",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_orderProps",
          "type": "bytes"
        }
      ],
      "name": "createIncreasePositionETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionRequestKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decreasePositionRequestKeysStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "decreasePositionRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawETH",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decreasePositionsIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeDecreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeDecreasePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeIncreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeIncreasePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getDecreasePositionRequestPath",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getIncreasePositionRequestPath",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRequestKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequestQueueLengths",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increasePositionBufferBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increasePositionRequestKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increasePositionRequestKeysStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "increasePositionRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasCollateralInETH",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "orderProps",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "increasePositionsIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLeverageEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPositionKeeper",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxGlobalLongSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxGlobalShortSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTimeDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBlockDelayKeeper",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minExecutionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTimeDelayPublic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderBook",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionUtils",
      "outputs": [
        {
          "internalType": "contract IPositionUtils",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralStorage",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minBlockDelayKeeper",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minTimeDelayPublic",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTimeDelay",
          "type": "uint256"
        }
      ],
      "name": "setDelayValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        }
      ],
      "name": "setDepositFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_increasePositionBufferBps",
          "type": "uint256"
        }
      ],
      "name": "setIncreasePositionBufferBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_longSizes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_shortSizes",
          "type": "uint256[]"
        }
      ],
      "name": "setMaxGlobalSizes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minExecutionFee",
          "type": "uint256"
        }
      ],
      "name": "setMinExecutionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_orderBook",
          "type": "address"
        }
      ],
      "name": "setOrderBook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setPositionKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPositionUtils",
          "name": "_positionUtils",
          "type": "address"
        }
      ],
      "name": "setPositionUtils",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referralStorage",
          "type": "address"
        }
      ],
      "name": "setReferralStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_increasePositionRequestKeysStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decreasePositionRequestKeysStart",
          "type": "uint256"
        }
      ],
      "name": "setRequestKeysStartValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortsTracker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbd4e609a539b0f3be205853789c0ee7dbbf43984a3c0741d25a338c134f89148",
  "receipt": {
    "to": null,
    "from": "0xc1048DB8e91E68b468b1d7B513fbB666C6e1622D",
    "contractAddress": "0xe6903607F5751FA2cb6760B5BB700f0a6c3E70CA",
    "transactionIndex": 0,
    "gasUsed": "5359748",
    "logsBloom": "0x
    "blockHash": "0xa8704c5f48cdfab1ec173d21265c706870866a24f92a695f361872caa0285cbb",
    "transactionHash": "0xbd4e609a539b0f3be205853789c0ee7dbbf43984a3c0741d25a338c134f89148",
    "logs": [],
    "blockNumber": 38480726,
    "cumulativeGasUsed": "5359748",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x32848E2d3aeCFA7364595609FB050A301050A6B4",
    "0xCA9c89410025F2bc3BeFb07CE57529F26ad69093",
    "0xf8C445440D0B6A977CcC1f0AbfA17F8C03bf3a62",
    "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
    30,
    "500000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "0ed7bbfc93c843c4e1ec43a777d114cf",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_shortsTracker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minExecutionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"CancelDecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"CancelIncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"CreateDecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"CreateIncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginFeeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"referralCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"DecreasePositionReferral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"ExecuteDecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderProps\",\"type\":\"bytes\"}],\"name\":\"ExecuteIncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginFeeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"referralCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"IncreasePositionReferral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBlockDelayKeeper\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minTimeDelayPublic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTimeDelay\",\"type\":\"uint256\"}],\"name\":\"SetDelayValues\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositFee\",\"type\":\"uint256\"}],\"name\":\"SetDepositFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increasePositionBufferBps\",\"type\":\"uint256\"}],\"name\":\"SetIncreasePositionBufferBps\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"SetIsLeverageEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"longSizes\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"shortSizes\",\"type\":\"uint256[]\"}],\"name\":\"SetMaxGlobalSizes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minExecutionFee\",\"type\":\"uint256\"}],\"name\":\"SetMinExecutionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referralStorage\",\"type\":\"address\"}],\"name\":\"SetReferralStorage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increasePositionRequestKeysStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decreasePositionRequestKeysStart\",\"type\":\"uint256\"}],\"name\":\"SetRequestKeysStartValues\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"SetTrustedForwarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRAILING_STOP_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"cancelDecreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"cancelIncreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withdrawETH\",\"type\":\"bool\"}],\"name\":\"createDecreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_referralCode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_orderProps\",\"type\":\"bytes\"}],\"name\":\"createIncreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_referralCode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_orderProps\",\"type\":\"bytes\"}],\"name\":\"createIncreasePositionETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreasePositionRequestKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreasePositionRequestKeysStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"decreasePositionRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawETH\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decreasePositionsIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeDecreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeDecreasePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeIncreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeIncreasePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getDecreasePositionRequestPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getIncreasePositionRequestPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestQueueLengths\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increasePositionBufferBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increasePositionRequestKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increasePositionRequestKeysStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"increasePositionRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasCollateralInETH\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"orderProps\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"increasePositionsIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLeverageEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPositionKeeper\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxGlobalLongSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxGlobalShortSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBlockDelayKeeper\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minExecutionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeDelayPublic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionUtils\",\"outputs\":[{\"internalType\":\"contract IPositionUtils\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBlockDelayKeeper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTimeDelayPublic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTimeDelay\",\"type\":\"uint256\"}],\"name\":\"setDelayValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositFee\",\"type\":\"uint256\"}],\"name\":\"setDepositFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_increasePositionBufferBps\",\"type\":\"uint256\"}],\"name\":\"setIncreasePositionBufferBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_longSizes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shortSizes\",\"type\":\"uint256[]\"}],\"name\":\"setMaxGlobalSizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minExecutionFee\",\"type\":\"uint256\"}],\"name\":\"setMinExecutionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_orderBook\",\"type\":\"address\"}],\"name\":\"setOrderBook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setPositionKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPositionUtils\",\"name\":\"_positionUtils\",\"type\":\"address\"}],\"name\":\"setPositionUtils\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referralStorage\",\"type\":\"address\"}],\"name\":\"setReferralStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_increasePositionRequestKeysStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decreasePositionRequestKeysStart\",\"type\":\"uint256\"}],\"name\":\"setRequestKeysStartValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortsTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/PositionRouter.sol\":\"PositionRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IERC2771Recipient.sol\\\";\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\\n *\\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\\n *\\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\\n *\\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\\n */\\nabstract contract ERC2771Recipient is IERC2771Recipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\\n     * @return forwarder The address of the Forwarder contract that is being used.\\n     */\\n    function getTrustedForwarder() public virtual view returns (address forwarder){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"contracts/access/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ncontract Governable {\\n    address public gov;\\n\\n    constructor() public {\\n        gov = msg.sender;\\n    }\\n\\n    modifier onlyGov() {\\n        require(msg.sender == gov, \\\"Governable: forbidden\\\");\\n        _;\\n    }\\n\\n    function setGov(address _gov) external onlyGov {\\n        gov = _gov;\\n    }\\n}\\n\",\"keccak256\":\"0xe719b0de64ee00468f6a985c8ef08ebdd271d99d6616308cbba458f78ed8c532\",\"license\":\"MIT\"},\"contracts/core/BasePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../tokens/interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../libraries/utils/Address.sol\\\";\\nimport \\\"../libraries/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"./interfaces/IRouter.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IShortsTracker.sol\\\";\\nimport \\\"./interfaces/IOrderBook.sol\\\";\\nimport \\\"./interfaces/IBasePositionManager.sol\\\";\\nimport \\\"./interfaces/IPositionUtils.sol\\\";\\n\\nimport \\\"../access/Governable.sol\\\";\\nimport \\\"../peripherals/interfaces/ITimelock.sol\\\";\\n\\nimport \\\"../referrals/interfaces/IReferralStorage.sol\\\";\\n\\ncontract BasePositionManager is IBasePositionManager, ReentrancyGuard, Governable {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n\\n    uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n\\n    address public admin;\\n\\n    address public vault;\\n    address public shortsTracker;\\n    address public router;\\n    address public weth;\\n\\n    // to prevent using the deposit and withdrawal of collateral as a zero fee swap,\\n    // there is a small depositFee charged if a collateral deposit results in the decrease\\n    // of leverage for an existing position\\n    // increasePositionBufferBps allows for a small amount of decrease of leverage\\n    uint256 public depositFee;\\n    uint256 public increasePositionBufferBps = 100;\\n\\n    address public referralStorage;\\n\\n    IPositionUtils public positionUtils;\\n\\n    mapping(address => uint256) public feeReserves;\\n\\n    mapping(address => uint256) public override maxGlobalLongSizes;\\n    mapping(address => uint256) public override maxGlobalShortSizes;\\n\\n    event SetDepositFee(uint256 depositFee);\\n    event SetIncreasePositionBufferBps(uint256 increasePositionBufferBps);\\n    event SetReferralStorage(address referralStorage);\\n    event SetAdmin(address admin);\\n    event WithdrawFees(address token, address receiver, uint256 amount);\\n\\n    event SetMaxGlobalSizes(address[] tokens, uint256[] longSizes, uint256[] shortSizes);\\n\\n    event IncreasePositionReferral(address account, uint256 sizeDelta, uint256 marginFeeBasisPoints, bytes32 referralCode, address referrer);\\n\\n    event DecreasePositionReferral(address account, uint256 sizeDelta, uint256 marginFeeBasisPoints, bytes32 referralCode, address referrer);\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"BPM: forbidden\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _vault,\\n        address _router,\\n        address _shortsTracker,\\n        address _weth,\\n        uint256 _depositFee\\n    ) public {\\n        vault = _vault;\\n        router = _router;\\n        weth = _weth;\\n        depositFee = _depositFee;\\n        shortsTracker = _shortsTracker;\\n\\n        admin = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        require(msg.sender == weth, \\\"BPM: invalid sender\\\");\\n    }\\n\\n    function _onlyAdmin() internal view {\\n        require(msg.sender == admin, \\\"BPM: forbidden\\\");\\n    }\\n\\n    function setAdmin(address _admin) external onlyGov {\\n        admin = _admin;\\n        emit SetAdmin(_admin);\\n    }\\n\\n    function setPositionUtils(IPositionUtils _positionUtils) external {\\n        _onlyAdmin();\\n        positionUtils = _positionUtils;\\n    }    \\n\\n    function setDepositFee(uint256 _depositFee) external {\\n        _onlyAdmin();\\n        depositFee = _depositFee;\\n        //emit SetDepositFee(_depositFee);\\n    }\\n\\n    function setIncreasePositionBufferBps(uint256 _increasePositionBufferBps) external {\\n        _onlyAdmin();\\n        increasePositionBufferBps = _increasePositionBufferBps;\\n        //emit SetIncreasePositionBufferBps(_increasePositionBufferBps);\\n    }\\n\\n    function setReferralStorage(address _referralStorage) external {\\n        _onlyAdmin();\\n        referralStorage = _referralStorage;\\n        emit SetReferralStorage(_referralStorage);\\n    }\\n\\n    function setMaxGlobalSizes(\\n        address[] memory _tokens,\\n        uint256[] memory _longSizes,\\n        uint256[] memory _shortSizes\\n    ) external {\\n        _onlyAdmin();\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            address token = _tokens[i];\\n            maxGlobalLongSizes[token] = _longSizes[i];\\n            maxGlobalShortSizes[token] = _shortSizes[i];\\n        }\\n\\n        emit SetMaxGlobalSizes(_tokens, _longSizes, _shortSizes);\\n    }\\n\\n    function withdrawFees(address _token, address _receiver) external {\\n        _onlyAdmin();\\n        uint256 amount = feeReserves[_token];\\n        if (amount == 0) {\\n            return;\\n        }\\n\\n        feeReserves[_token] = 0;\\n        IERC20(_token).safeTransfer(_receiver, amount);\\n\\n        emit WithdrawFees(_token, _receiver, amount);\\n    }\\n\\n    function approve(\\n        address _token,\\n        address _spender,\\n        uint256 _amount\\n    ) external onlyGov {\\n        IERC20(_token).approve(_spender, _amount);\\n    }\\n\\n    function sendValue(address payable _receiver, uint256 _amount) external onlyGov {\\n        _receiver.sendValue(_amount);\\n    }\\n\\n    function _increasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _price\\n    ) internal {\\n        address _vault = vault;\\n\\n        uint256 markPrice = positionUtils.validatePositionPrice(true,_isLong,_indexToken,_price,_sizeDelta,maxGlobalLongSizes[_indexToken],maxGlobalShortSizes[_indexToken]);\\n\\n        address timelock = IVault(_vault).gov();\\n\\n        // should be called strictly before position is updated in Vault\\n        IShortsTracker(shortsTracker).updateGlobalShortData(_account, _collateralToken, _indexToken, _isLong, _sizeDelta, markPrice, true);\\n\\n        ITimelock(timelock).enableLeverage(_vault);\\n        IRouter(router).pluginIncreasePosition(_account, _collateralToken, _indexToken, _sizeDelta, _isLong);\\n        ITimelock(timelock).disableLeverage(_vault);\\n\\n        _emitIncreasePositionReferral(_account, _sizeDelta);\\n    }\\n\\n    function _decreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver,\\n        uint256 _price\\n    ) internal returns (uint256) {\\n        address _vault = vault;        \\n\\n        uint256 markPrice = positionUtils.validatePositionPrice(false,_isLong,_indexToken,_price,0,0,0);\\n\\n        address timelock = IVault(_vault).gov();\\n\\n        // should be called strictly before position is updated in Vault\\n        IShortsTracker(shortsTracker).updateGlobalShortData(_account, _collateralToken, _indexToken, _isLong, _sizeDelta, markPrice, false);\\n\\n        ITimelock(timelock).enableLeverage(_vault);\\n        uint256 amountOut = IRouter(router).pluginDecreasePosition(_account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver);\\n        ITimelock(timelock).disableLeverage(_vault);\\n\\n        _emitDecreasePositionReferral(_account, _sizeDelta);\\n\\n        return amountOut;\\n    }\\n\\n    function _emitIncreasePositionReferral(address _account, uint256 _sizeDelta) internal {\\n        address _referralStorage = referralStorage;\\n        if (_referralStorage == address(0)) {\\n            return;\\n        }\\n\\n        (bytes32 referralCode, address referrer) = IReferralStorage(_referralStorage).getTraderReferralInfo(_account);\\n        emit IncreasePositionReferral(_account, _sizeDelta, IVault(vault).marginFeeBasisPoints(), referralCode, referrer);\\n    }\\n\\n    function _emitDecreasePositionReferral(address _account, uint256 _sizeDelta) internal {\\n        address _referralStorage = referralStorage;\\n        if (_referralStorage == address(0)) {\\n            return;\\n        }\\n\\n        (bytes32 referralCode, address referrer) = IReferralStorage(_referralStorage).getTraderReferralInfo(_account);\\n\\n        if (referralCode == bytes32(0)) {\\n            return;\\n        }\\n\\n        emit DecreasePositionReferral(_account, _sizeDelta, IVault(vault).marginFeeBasisPoints(), referralCode, referrer);\\n    }\\n\\n    function _swap(\\n        address[] memory _path,\\n        uint256 _minOut,\\n        address _receiver\\n    ) internal returns (uint256) {\\n        if (_path.length == 2) {\\n            return _vaultSwap(_path[0], _path[1], _minOut, _receiver);\\n        }\\n        revert(\\\"BPM: invalid _path.length\\\");\\n    }\\n\\n    function _vaultSwap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _minOut,\\n        address _receiver\\n    ) internal returns (uint256) {\\n        uint256 amountOut = IVault(vault).swap(_tokenIn, _tokenOut, _receiver);\\n        require(amountOut >= _minOut, \\\"BPM: insufficient amountOut\\\");\\n        return amountOut;\\n    }\\n\\n    function _transferInETH() internal {\\n        if (msg.value != 0) {\\n            IWETH(weth).deposit{value: msg.value}();\\n        }\\n    }\\n\\n    function _transferOutETH(uint256 _amountOut, address payable _receiver) internal {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.sendValue(_amountOut);\\n    }\\n\\n    function _transferOutETHWithGasLimit(uint256 _amountOut, address payable _receiver) internal {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.transfer(_amountOut);\\n    }\\n\\n    function _collectFees(\\n        address _account,\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) internal returns (uint256) {\\n        bool shouldDeductFee = positionUtils.shouldDeductFee(_account, _path, _amountIn, _indexToken, _isLong, _sizeDelta,increasePositionBufferBps);\\n\\n        if (shouldDeductFee) {\\n            uint256 afterFeeAmount = _amountIn.mul(BASIS_POINTS_DIVISOR.sub(depositFee)).div(BASIS_POINTS_DIVISOR);\\n            uint256 feeAmount = _amountIn.sub(afterFeeAmount);\\n            address feeToken = _path[_path.length - 1];\\n            feeReserves[feeToken] = feeReserves[feeToken].add(feeAmount);\\n            return afterFeeAmount;\\n        }\\n\\n        return _amountIn;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc680620bd52d3c0368aa4ffef6dbf0660bed67717162adc035c9903773579d6e\",\"license\":\"MIT\"},\"contracts/core/PositionRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./interfaces/IRouter.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IPositionRouter.sol\\\";\\nimport \\\"./BasePositionManager.sol\\\";\\nimport \\\"@opengsn/contracts/src/ERC2771Recipient.sol\\\";\\n\\ncontract PositionRouter is BasePositionManager, IPositionRouter,ERC2771Recipient {\\n\\n    uint256 public constant MAX_TRAILING_STOP_PERCENTAGE = 2000;\\n\\n    struct IncreasePositionRequest {\\n        address account;\\n        address[] path;\\n        address indexToken;\\n        uint256 amountIn;\\n        uint256 minOut;\\n        uint256 sizeDelta;\\n        bool isLong;\\n        uint256 acceptablePrice;\\n        uint256 executionFee;\\n        uint256 blockNumber;\\n        uint256 blockTime;\\n        bool hasCollateralInETH;\\n        bytes orderProps;  \\n    }\\n\\n    struct DecreasePositionRequest {\\n        address account;\\n        address[] path;\\n        address indexToken;\\n        uint256 collateralDelta;\\n        uint256 sizeDelta;\\n        bool isLong;\\n        address receiver;\\n        uint256 acceptablePrice;\\n        uint256 minOut;\\n        uint256 executionFee;\\n        uint256 blockNumber;\\n        uint256 blockTime;\\n        bool withdrawETH;\\n    }\\n\\n    address public orderBook;\\n\\n    uint256 public minExecutionFee;\\n\\n    uint256 public minBlockDelayKeeper;\\n    uint256 public minTimeDelayPublic;\\n    uint256 public maxTimeDelay;\\n\\n    bool public isLeverageEnabled = true;\\n\\n    bytes32[] public increasePositionRequestKeys;\\n    bytes32[] public decreasePositionRequestKeys;\\n\\n    uint256 public override increasePositionRequestKeysStart;\\n    uint256 public override decreasePositionRequestKeysStart;\\n\\n    mapping(address => bool) public isPositionKeeper;\\n\\n    mapping(address => uint256) public increasePositionsIndex;\\n    mapping(bytes32 => IncreasePositionRequest) public increasePositionRequests;\\n\\n    mapping(address => uint256) public decreasePositionsIndex;\\n    mapping(bytes32 => DecreasePositionRequest) public decreasePositionRequests;\\n\\n    event CreateIncreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 acceptablePrice,\\n        uint256 executionFee,\\n        uint256 index,\\n        uint256 blockNumber,\\n        uint256 blockTime,\\n        uint256 gasPrice\\n    );\\n\\n    event ExecuteIncreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 acceptablePrice,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap,\\n        bytes orderProps\\n    );\\n\\n    event CancelIncreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 acceptablePrice,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    event CreateDecreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        address receiver,\\n        uint256 acceptablePrice,\\n        uint256 minOut,\\n        uint256 executionFee,\\n        uint256 index,\\n        uint256 blockNumber,\\n        uint256 blockTime\\n    );\\n\\n    event ExecuteDecreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        address receiver,\\n        uint256 acceptablePrice,\\n        uint256 minOut,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    event CancelDecreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        address receiver,\\n        uint256 acceptablePrice,\\n        uint256 minOut,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    //event SetPositionKeeper(address indexed account, bool isActive);\\n    event SetMinExecutionFee(uint256 minExecutionFee);\\n    event SetIsLeverageEnabled(bool isLeverageEnabled);\\n    event SetDelayValues(uint256 minBlockDelayKeeper, uint256 minTimeDelayPublic, uint256 maxTimeDelay);\\n    event SetRequestKeysStartValues(uint256 increasePositionRequestKeysStart, uint256 decreasePositionRequestKeysStart);\\n\\n    event SetTrustedForwarder(address trustedForwarder);\\n\\n\\n    constructor(\\n        address _vault,\\n        address _router,\\n        address _shortsTracker,\\n        address _weth,\\n        uint256 _depositFee,\\n        uint256 _minExecutionFee\\n    ) public BasePositionManager(_vault, _router, _shortsTracker, _weth, _depositFee) {\\n        minExecutionFee = _minExecutionFee;\\n    }\\n\\n    function setTrustedForwarder(address _trustedForwarder) external  {\\n         _onlyAdmin();\\n        _setTrustedForwarder(_trustedForwarder);\\n        emit SetTrustedForwarder(_trustedForwarder);\\n\\n    }\\n\\n    function _onlyPositionKeeper() private view {\\n        require(isPositionKeeper[msg.sender], \\\"PR: forbidden\\\");\\n    }\\n\\n    function setOrderBook(address _orderBook) external  {\\n         _onlyAdmin();\\n        orderBook = _orderBook;\\n    }\\n\\n    function setPositionKeeper(address _account, bool _isActive) external  {\\n        _onlyAdmin();\\n        isPositionKeeper[_account] = _isActive;\\n        //emit SetPositionKeeper(_account, _isActive);\\n    }\\n\\n    function setMinExecutionFee(uint256 _minExecutionFee) external  {\\n        _onlyAdmin();\\n        minExecutionFee = _minExecutionFee;\\n        //emit SetMinExecutionFee(_minExecutionFee);\\n    }\\n\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external  {\\n        _onlyAdmin();\\n        isLeverageEnabled = _isLeverageEnabled;\\n        //emit SetIsLeverageEnabled(_isLeverageEnabled);\\n    }\\n\\n    function setDelayValues(\\n        uint256 _minBlockDelayKeeper,\\n        uint256 _minTimeDelayPublic,\\n        uint256 _maxTimeDelay\\n    ) external  {\\n        _onlyAdmin();\\n        minBlockDelayKeeper = _minBlockDelayKeeper;\\n        minTimeDelayPublic = _minTimeDelayPublic;\\n        maxTimeDelay = _maxTimeDelay;\\n        //emit SetDelayValues(_minBlockDelayKeeper, _minTimeDelayPublic, _maxTimeDelay);\\n    }\\n\\n    function setRequestKeysStartValues(uint256 _increasePositionRequestKeysStart, uint256 _decreasePositionRequestKeysStart) external  {\\n        _onlyAdmin();\\n        increasePositionRequestKeysStart = _increasePositionRequestKeysStart;\\n        decreasePositionRequestKeysStart = _decreasePositionRequestKeysStart;\\n\\n        //emit SetRequestKeysStartValues(_increasePositionRequestKeysStart, _decreasePositionRequestKeysStart);\\n    }\\n\\n    function executeIncreasePositions(uint256 _endIndex, address payable _executionFeeReceiver) external override  {\\n        _onlyPositionKeeper();\\n        uint256 index = increasePositionRequestKeysStart;\\n        uint256 length = increasePositionRequestKeys.length;\\n\\n        if (index >= length) {\\n            return;\\n        }\\n\\n        if (_endIndex > length) {\\n            _endIndex = length;\\n        }\\n\\n        while (index < _endIndex) {\\n            bytes32 key = increasePositionRequestKeys[index];\\n\\n            // if the request was executed then delete the key from the array\\n            // if the request was not executed then break from the loop, this can happen if the\\n            // minimum number of blocks has not yet passed\\n            // an error could be thrown if the request is too old or if the slippage is\\n            // higher than what the user specified, or if there is insufficient liquidity for the position\\n            // in case an error was thrown, cancel the request\\n            try this.executeIncreasePosition(key, _executionFeeReceiver) returns (bool _wasExecuted) {\\n                if (!_wasExecuted) {\\n                    break;\\n                }\\n            } catch {\\n                // wrap this call in a try catch to prevent invalid cancels from blocking the loop\\n                try this.cancelIncreasePosition(key, _executionFeeReceiver) returns (bool _wasCancelled) {\\n                    if (!_wasCancelled) {\\n                        break;\\n                    }\\n                } catch {}\\n            }\\n\\n            delete increasePositionRequestKeys[index];\\n            index++;\\n        }\\n\\n        increasePositionRequestKeysStart = index;\\n    }\\n\\n    function executeDecreasePositions(uint256 _endIndex, address payable _executionFeeReceiver) external override {\\n        _onlyPositionKeeper();\\n        uint256 index = decreasePositionRequestKeysStart;\\n        uint256 length = decreasePositionRequestKeys.length;\\n\\n        if (index >= length) {\\n            return;\\n        }\\n\\n        if (_endIndex > length) {\\n            _endIndex = length;\\n        }\\n\\n        while (index < _endIndex) {\\n            bytes32 key = decreasePositionRequestKeys[index];\\n\\n            // if the request was executed then delete the key from the array\\n            // if the request was not executed then break from the loop, this can happen if the\\n            // minimum number of blocks has not yet passed\\n            // an error could be thrown if the request is too old\\n            // in case an error was thrown, cancel the request\\n            try this.executeDecreasePosition(key, _executionFeeReceiver) returns (bool _wasExecuted) {\\n                if (!_wasExecuted) {\\n                    break;\\n                }\\n            } catch {\\n                // wrap this call in a try catch to prevent invalid cancels from blocking the loop\\n                try this.cancelDecreasePosition(key, _executionFeeReceiver) returns (bool _wasCancelled) {\\n                    if (!_wasCancelled) {\\n                        break;\\n                    }\\n                } catch {}\\n            }\\n\\n            delete decreasePositionRequestKeys[index];\\n            index++;\\n        }\\n\\n        decreasePositionRequestKeysStart = index;\\n    }\\n\\n    function getOrderProps(bytes memory _orderProps) private pure returns(uint256,uint256,uint256,address,bool){\\n        return abi.decode(_orderProps, (uint256,uint256,uint256,address,bool));\\n    }\\n\\n    function _validateIncreasePosition(\\n        address[] memory _path,\\n        uint256 _executionFee,\\n        bytes memory _orderProps,\\n        bool _isETH\\n    ) private{\\n        (uint256 trailingStopPercentage,uint256 slPrice,uint256 tpPrice,,) = getOrderProps(_orderProps);\\n        require(trailingStopPercentage<MAX_TRAILING_STOP_PERCENTAGE,\\\"PR:invalid tsp\\\");\\n        require(trailingStopPercentage == 0 || slPrice == 0 ,\\\"PR:only one type sl\\\");\\n\\n\\n        uint256 orderTotalFee = IOrderBook(orderBook).minSLTPExecutionFee().mul((slPrice>0?1:0)+(tpPrice>0?1:0));\\n        if(trailingStopPercentage>0){\\n            orderTotalFee = orderTotalFee.add(IOrderBook(orderBook).minTrailingStopExecutionFee()); \\n        }\\n        \\n        require(_executionFee >= minExecutionFee.add(orderTotalFee), \\\"PR: invalid executionFee\\\");\\n        if(_isETH){\\n            require(msg.value >= _executionFee, \\\"PR: invalid msg.value\\\");\\n        }else{\\n            require(msg.value == _executionFee, \\\"PR: invalid msg.value\\\");\\n        }\\n        require(_path.length == 1 || _path.length == 2, \\\"PR: invalid _path length\\\");\\n\\n    }\\n\\n    function createIncreasePosition(\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _acceptablePrice,\\n        uint256 _executionFee,\\n        bytes32 _referralCode,\\n        bytes memory _orderProps\\n    ) external payable nonReentrant {\\n        _validateIncreasePosition(_path,_executionFee,_orderProps,false);\\n\\n        _transferInETH();\\n        _setTraderReferralCode(_referralCode);\\n\\n        if (_amountIn > 0) {\\n            IRouter(router).pluginTransfer(_path[0], _msgSender(), address(this), _amountIn);\\n        }\\n\\n        _createIncreasePosition(_msgSender(), _path, _indexToken, _amountIn, _minOut, _sizeDelta, _isLong, _acceptablePrice, _executionFee, false, _orderProps);\\n    }\\n\\n    function createIncreasePositionETH(\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _acceptablePrice,\\n        uint256 _executionFee,\\n        bytes32 _referralCode,\\n        bytes memory _orderProps\\n    ) external payable nonReentrant {\\n        require(_path[0] == weth, \\\"PR: invalid _path\\\");\\n        _validateIncreasePosition(_path,_executionFee,_orderProps,true);\\n\\n\\n        _transferInETH();\\n        _setTraderReferralCode(_referralCode);\\n\\n        uint256 amountIn = msg.value.sub(_executionFee);\\n\\n        _createIncreasePosition(_msgSender(), _path, _indexToken, amountIn, _minOut, _sizeDelta, _isLong, _acceptablePrice, _executionFee, true,_orderProps);\\n    }\\n\\n    function createDecreasePosition(\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver,\\n        uint256 _acceptablePrice,\\n        uint256 _minOut,\\n        uint256 _executionFee,\\n        bool _withdrawETH\\n    ) external payable nonReentrant {\\n        require(_executionFee >= minExecutionFee, \\\"PR: invalid executionFee\\\");\\n        require(msg.value == _executionFee, \\\"PR: invalid msg.value\\\");\\n        require(_path.length == 1 || _path.length == 2, \\\"PR: invalid _path length\\\");\\n\\n        if (_withdrawETH) {\\n            require(_path[_path.length - 1] == weth, \\\"PR: invalid _path\\\");\\n        }\\n\\n        _transferInETH();\\n\\n        _createDecreasePosition(_msgSender(), _path, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver, _acceptablePrice, _minOut, _executionFee, _withdrawETH);\\n    }\\n\\n    function getRequestQueueLengths()\\n        external \\n        override\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        return (increasePositionRequestKeysStart, increasePositionRequestKeys.length, decreasePositionRequestKeysStart, decreasePositionRequestKeys.length);\\n    }\\n\\n    function _processOrder(IncreasePositionRequest memory _request) private returns (uint256 ) {\\n        //uint256 executionFee = _request.executionFee;\\n\\n        (uint256 trailingStopPercentage,uint256 slPrice,uint256 tpPrice,address receiveToken,) = getOrderProps(_request.orderProps);\\n\\n        if (trailingStopPercentage>0 || slPrice>0 || tpPrice>0){ //TP and SL Order only for First Increase\\n            uint256 orderExecutionFees = _request.executionFee.sub(minExecutionFee);\\n            IWETH(weth).withdraw(orderExecutionFees);\\n            address[] memory path;\\n            if(receiveToken != _request.path[_request.path.length - 1] ){\\n                path = new address[](2);\\n                path[0] = _request.path[_request.path.length - 1];\\n                path[1] = receiveToken;\\n            }else{\\n                path = new address[](1);\\n                path[0] = _request.path[_request.path.length - 1];\\n            }           \\n             \\n            IOrderBook(orderBook).createDecreaseOrderSLTP{value:orderExecutionFees}(_request.account, path , _request.indexToken, _request.isLong,_request.orderProps,_request.sizeDelta);\\n            return minExecutionFee;\\n        }\\n        return _request.executionFee;\\n    }    \\n\\n    function executeIncreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        IncreasePositionRequest memory request = increasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeIncreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) {\\n            return true;\\n        }\\n\\n        bool shouldExecute = _validateExecution(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldExecute) {\\n            return false;\\n        }\\n\\n        delete increasePositionRequests[_key];\\n\\n        if (request.amountIn > 0) {\\n            uint256 amountIn = request.amountIn;\\n\\n            if (request.path.length > 1) {\\n                IERC20(request.path[0]).safeTransfer(vault, request.amountIn);\\n                amountIn = _swap(request.path, request.minOut, address(this));\\n            }\\n\\n            uint256 afterFeeAmount = _collectFees(request.account, request.path, amountIn, request.indexToken, request.isLong, request.sizeDelta);\\n            IERC20(request.path[request.path.length - 1]).safeTransfer(vault, afterFeeAmount);\\n        }\\n\\n        _increasePosition(request.account, request.path[request.path.length - 1], request.indexToken, request.sizeDelta, request.isLong, request.acceptablePrice);\\n\\n        uint256 executionFee = _processOrder(request);\\n            \\n        _transferOutETH(executionFee, _executionFeeReceiver);\\n        \\n        _emitExecuteIncreasePosition(request);\\n        \\n\\n\\n\\n        return true;\\n    }\\n\\n    function _emitExecuteIncreasePosition(IncreasePositionRequest memory request) private{\\n        emit ExecuteIncreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.amountIn,\\n            request.minOut,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.acceptablePrice,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime),\\n            request.orderProps\\n        );\\n\\n    }\\n\\n    function cancelIncreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        IncreasePositionRequest memory request = increasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeIncreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) {\\n            return true;\\n        }\\n\\n        bool shouldCancel = _validateCancellation(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldCancel) {\\n            return false;\\n        }\\n\\n        delete increasePositionRequests[_key];\\n\\n        if (request.hasCollateralInETH) {\\n            _transferOutETHWithGasLimit(request.amountIn, payable(request.account));\\n        } else {\\n            IERC20(request.path[0]).safeTransfer(request.account, request.amountIn);\\n        }\\n\\n        _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit CancelIncreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.amountIn,\\n            request.minOut,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.acceptablePrice,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function executeDecreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        DecreasePositionRequest memory request = decreasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeDecreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) {\\n            return true;\\n        }\\n\\n        bool shouldExecute = _validateExecution(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldExecute) {\\n            return false;\\n        }\\n\\n        delete decreasePositionRequests[_key];\\n\\n        uint256 amountOut = _decreasePosition(\\n            request.account,\\n            request.path[0],\\n            request.indexToken,\\n            request.collateralDelta,\\n            request.sizeDelta,\\n            request.isLong,\\n            address(this),\\n            request.acceptablePrice\\n        );\\n\\n        if (request.path.length > 1) {\\n            IERC20(request.path[0]).safeTransfer(vault, amountOut);\\n            amountOut = _swap(request.path, request.minOut, address(this));\\n        }\\n\\n        if (request.withdrawETH) {\\n            _transferOutETHWithGasLimit(amountOut, payable(request.receiver));\\n        } else {\\n            IERC20(request.path[request.path.length - 1]).safeTransfer(request.receiver, amountOut);\\n        }\\n\\n        _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit ExecuteDecreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.collateralDelta,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.receiver,\\n            request.acceptablePrice,\\n            request.minOut,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function cancelDecreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        DecreasePositionRequest memory request = decreasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeDecreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) {\\n            return true;\\n        }\\n\\n        bool shouldCancel = _validateCancellation(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldCancel) {\\n            return false;\\n        }\\n\\n        delete decreasePositionRequests[_key];\\n\\n        _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit CancelDecreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.collateralDelta,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.receiver,\\n            request.acceptablePrice,\\n            request.minOut,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function getRequestKey(address _account, uint256 _index) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_account, _index));\\n    }\\n\\n    function getIncreasePositionRequestPath(bytes32 _key) public view returns (address[] memory) {\\n        IncreasePositionRequest memory request = increasePositionRequests[_key];\\n        return request.path;\\n    }\\n\\n    function getDecreasePositionRequestPath(bytes32 _key) public view returns (address[] memory) {\\n        DecreasePositionRequest memory request = decreasePositionRequests[_key];\\n        return request.path;\\n    }\\n\\n    function _setTraderReferralCode(bytes32 _referralCode) internal {\\n        if (_referralCode != bytes32(0) && referralStorage != address(0)) {\\n            IReferralStorage(referralStorage).setTraderReferralCode(_msgSender(), _referralCode);\\n        }\\n    }\\n\\n    function _validateExecution(\\n        uint256 _positionBlockNumber,\\n        uint256 _positionBlockTime,\\n        address _account\\n    ) internal view returns (bool) {\\n        if (_positionBlockTime.add(maxTimeDelay) <= block.timestamp) {\\n            revert(\\\"PR: request has expired\\\");\\n        }\\n\\n        bool isKeeperCall = msg.sender == address(this) || isPositionKeeper[msg.sender];\\n\\n        if (!isLeverageEnabled && !isKeeperCall) {\\n            revert(\\\"PR: forbidden\\\");\\n        }\\n\\n        if (isKeeperCall) {\\n            return _positionBlockNumber.add(minBlockDelayKeeper) <= block.number;\\n        }\\n\\n        require(msg.sender == _account, \\\"PR: forbidden\\\");\\n\\n        require(_positionBlockTime.add(minTimeDelayPublic) <= block.timestamp, \\\"PR: min delay not yet passed\\\");\\n\\n        return true;\\n    }\\n\\n    function _validateCancellation(\\n        uint256 _positionBlockNumber,\\n        uint256 _positionBlockTime,\\n        address _account\\n    ) internal view returns (bool) {\\n        bool isKeeperCall = msg.sender == address(this) || isPositionKeeper[msg.sender];\\n\\n        if (!isLeverageEnabled && !isKeeperCall) {\\n            revert(\\\"PR: forbidden\\\");\\n        }\\n\\n        if (isKeeperCall) {\\n            return _positionBlockNumber.add(minBlockDelayKeeper) <= block.number;\\n        }\\n\\n        require(msg.sender == _account, \\\"PR: forbidden\\\");\\n\\n        require(_positionBlockTime.add(minTimeDelayPublic) <= block.timestamp, \\\"PR: min delay not yet passed\\\");\\n\\n        return true;\\n    }\\n\\n    function _createIncreasePosition(\\n        address _account,\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _acceptablePrice,\\n        uint256 _executionFee,\\n        bool _hasCollateralInETH,\\n        bytes memory _orderProps\\n    ) internal {\\n        uint256 index = increasePositionsIndex[_account].add(1);\\n        increasePositionsIndex[_account] = index;\\n\\n        IncreasePositionRequest memory request = IncreasePositionRequest(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _amountIn,\\n            _minOut,\\n            _sizeDelta,\\n            _isLong,\\n            _acceptablePrice,\\n            _executionFee,\\n            block.number,\\n            block.timestamp,\\n            _hasCollateralInETH,\\n            _orderProps\\n        );\\n\\n        bytes32 key = getRequestKey(_account, index);\\n        increasePositionRequests[key] = request;\\n\\n        increasePositionRequestKeys.push(key);\\n\\n        emit CreateIncreasePosition(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _amountIn,\\n            _minOut,\\n            _sizeDelta,\\n            _isLong,\\n            _acceptablePrice,\\n            _executionFee,\\n            index,\\n            block.number,\\n            block.timestamp,\\n            tx.gasprice\\n        );\\n    }\\n\\n    function _createDecreasePosition(\\n        address _account,\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver,\\n        uint256 _acceptablePrice,\\n        uint256 _minOut,\\n        uint256 _executionFee,\\n        bool _withdrawETH\\n    ) internal {\\n        uint256 index = decreasePositionsIndex[_account].add(1);\\n        decreasePositionsIndex[_account] = index;\\n\\n        DecreasePositionRequest memory request = DecreasePositionRequest(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _collateralDelta,\\n            _sizeDelta,\\n            _isLong,\\n            _receiver,\\n            _acceptablePrice,\\n            _minOut,\\n            _executionFee,\\n            block.number,\\n            block.timestamp,\\n            _withdrawETH\\n        );\\n\\n        bytes32 key = getRequestKey(_account, index);\\n        decreasePositionRequests[key] = request;\\n\\n        decreasePositionRequestKeys.push(key);\\n\\n        emit CreateDecreasePosition(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _collateralDelta,\\n            _sizeDelta,\\n            _isLong,\\n            _receiver,\\n            _acceptablePrice,\\n            _minOut,\\n            _executionFee,\\n            index,\\n            block.number,\\n            block.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x5b8eaf7a79bb38967c16d8c201df05938665d64abc6fa8d36ac331ba09c3ea37\",\"license\":\"MIT\"},\"contracts/core/interfaces/IBasePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IBasePositionManager {\\n    function maxGlobalLongSizes(address _token) external view returns (uint256);\\n\\n    function maxGlobalShortSizes(address _token)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xf3677755755839e6e44cf3b41ca2ecab010bf65b0234f0aae441e57a7f9de062\",\"license\":\"MIT\"},\"contracts/core/interfaces/IOrderBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.12 <0.9.0;\\n\\ninterface IOrderBook {\\n    // function getSwapOrder(address _account, uint256 _orderIndex)\\n    //     external\\n    //     view\\n    //     returns (\\n    //         address path0,\\n    //         address path1,\\n    //         address path2,\\n    //         uint256 amountIn,\\n    //         uint256 minOut,\\n    //         uint256 triggerRatio,\\n    //         bool triggerAboveThreshold,\\n    //         bool shouldUnwrap,\\n    //         uint256 executionFee\\n    //     );\\n\\n    function getIncreaseOrder(address _account, uint256 _orderIndex)\\n        external\\n        view\\n        returns (\\n            address purchaseToken,\\n            uint256 purchaseTokenAmount,\\n            address collateralToken,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee\\n        );\\n\\n    function getDecreaseOrder(address _account, uint256 _orderIndex)\\n        external\\n        view\\n        returns (\\n            address collateralToken,\\n            address receiveToken,\\n            uint256 collateralDelta,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee,\\n            uint256 orderType,\\n            uint256 trailingStopPercentage\\n        );\\n\\n    // function executeSwapOrder(\\n    //     address,\\n    //     uint256,\\n    //     address payable\\n    // ) external;\\n\\n    function executeDecreaseOrder(\\n        address,\\n        uint256,\\n        address payable,\\n        uint256 _trailingStopRefPrice,\\n        uint256 _trailingStopRefPriceTimestamp\\n    ) external;\\n\\n    function executeIncreaseOrder(\\n        address,\\n        uint256,\\n        address payable\\n    ) external;\\n\\n    function createDecreaseOrderSLTP(\\n        address _account,\\n        address[] memory _path,\\n        address _indexToken,\\n        bool _isLong,\\n        bytes memory _orderProps,\\n        uint256 _sizeDelta\\n    ) external payable;\\n\\n    function minExecutionFee() external view returns (uint256);\\n    function minTrailingStopExecutionFee() external view returns (uint256);\\n    function minSLTPExecutionFee() external view returns (uint256);\\n    function MAX_TRAILING_STOP_PERCENTAGE() external view returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0xcdffaeb1afe08163354c37a56606e7ec38cf2a53d48b8fc908c72316dbf17c13\",\"license\":\"MIT\"},\"contracts/core/interfaces/IPositionRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IPositionRouter {\\n\\n    function increasePositionRequestKeysStart() external returns (uint256);\\n    function decreasePositionRequestKeysStart() external returns (uint256);\\n\\n    function executeIncreasePositions(\\n        uint256 _count,\\n        address payable _executionFeeReceiver\\n    ) external;\\n\\n    function executeDecreasePositions(\\n        uint256 _count,\\n        address payable _executionFeeReceiver\\n    ) external;\\n\\n    function getRequestQueueLengths()  external view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n}\\n\",\"keccak256\":\"0x6ab9a9d55916196be9dc31253e687b84c065b6cf925dcacfe21d953ffdb57005\",\"license\":\"MIT\"},\"contracts/core/interfaces/IPositionUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IPositionUtils {\\n    function shouldDeductFee(\\n        address _account,\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta,\\n        uint256 _increasePositionBufferBps\\n    ) external view returns (bool);\\n\\n    function validatePositionPrice(\\n        bool _isIncrease,\\n        bool _isLong,\\n        address _indexToken,\\n        uint256 _price,\\n        uint256 _sizeDelta,\\n        uint256 maxGlobalLongSize,\\n        uint256 maxGlobalShortSize\\n    ) external returns(uint256) ;\\n\\n    function validateOrderPrice(\\n        bool _triggerAboveThreshold,\\n        uint256 _triggerPrice,\\n        address _indexToken,\\n        bool _maximizePrice,\\n        bool _raise,\\n        uint256 trailingStopPercentage,\\n        uint256 refPrice\\n    ) external view returns (uint256, bool);\\n\\n    function emitCreateIncreaseOrder(\\n        address  account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        bytes memory orderProps         \\n    ) external;\\n\\n\\n   function emitCancelIncreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    ) external;\\n    function emitExecuteIncreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 executionPrice\\n    ) external;\\n    function emitUpdateIncreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        address indexToken,\\n        bool isLong,\\n        uint256 sizeDelta,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold\\n    ) external;\\n    function emitCreateDecreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        address receiveToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 orderType,\\n        uint256 trailingStopPercentage\\n    ) external;\\n\\n    function emitCancelDecreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    ) external;\\n    function emitExecuteDecreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 executionPrice\\n    ) external;\\n    function emitExecuteTrailingStopOrder(\\n        address account,\\n        uint256 orderIndex,\\n        uint256  trailingStopPercentage,\\n        uint256 trailingStopRefPrice,\\n        uint256 trailingStopRefPriceTimestamp,\\n        uint256 executionPrice\\n    ) external;\\n    function emitUpdateDecreaseOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 trailingStopPercentage\\n    ) external;\\n    function emitCreateSwapOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address[] memory path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    ) external;\\n    function emitCancelSwapOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address[] memory path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    ) external;\\n    function emitUpdateSwapOrder(\\n        address account,\\n        uint256 ordexIndex,\\n        address[] memory path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    ) external;\\n    function emitExecuteSwapOrder(\\n        address account,\\n        uint256 orderIndex,\\n        address[] memory path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 amountOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    ) external;\\n\\n    function validateSwapOrderPriceWithTriggerAboveThreshold(address[] memory _path, uint256 _triggerRatio) external view returns (bool); \\n\\n    function getMaxAmountIn(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view returns (uint256);\\n\\n    function usdToTokenMax(address _token, uint256 _usdAmount) external view returns (uint256);\\n\\n    function usdToTokenMin(address _token, uint256 _usdAmount) external view returns (uint256);\\n\\n    function usdToToken(\\n        address _token,\\n        uint256 _usdAmount,\\n        uint256 _price\\n    ) external view returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0x38465d7ee61b947045617d9c7a96e5a75f3d0b710aae26d9030029e7352a5556\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IRouter {\\n    function addPlugin(address _plugin) external;\\n\\n    function pluginTransfer(\\n        address _token,\\n        address _account,\\n        address _receiver,\\n        uint256 _amount\\n    ) external;\\n\\n    function pluginIncreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external;\\n\\n    function pluginDecreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function swap(\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        address _receiver\\n    ) external;\\n}\\n\",\"keccak256\":\"0x587948a9395b2f9052ab3680124b594504ed899941ea9fa5ea5cb59f33ec89ed\",\"license\":\"MIT\"},\"contracts/core/interfaces/IShortsTracker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IShortsTracker {\\n    function isGlobalShortDataReady() external view returns (bool);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function getNextGlobalShortData(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _nextPrice,\\n        uint256 _sizeDelta,\\n        bool _isIncrease\\n    ) external view returns (uint256, uint256);\\n    function updateGlobalShortData(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta,\\n        uint256 _markPrice,\\n        bool _isIncrease\\n    ) external;\\n    function setIsGlobalShortDataReady(bool value) external;\\n    function setInitData(address[] calldata _tokens, uint256[] calldata _averagePrices) external;\\n}\\n\",\"keccak256\":\"0x7b3f7791cba4f3ccfa308a9bf176663e9cead74bf78ac1c7ae9f2a041a26075d\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IVaultUtils.sol\\\";\\n\\ninterface IVault {\\n    function isInitialized() external view returns (bool);\\n\\n    function isSwapEnabled() external view returns (bool);\\n\\n    function isLeverageEnabled() external view returns (bool);\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n\\n    function router() external view returns (address);\\n\\n    function usdm() external view returns (address);\\n\\n    function gov() external view returns (address);\\n\\n    function whitelistedTokenCount() external view returns (uint256);\\n\\n    function maxLeverage() external view returns (uint256);\\n\\n    function minProfitTime() external view returns (uint256);\\n\\n    function hasDynamicFees() external view returns (bool);\\n\\n    function fundingInterval() external view returns (uint256);\\n\\n    function totalTokenWeights() external view returns (uint256);\\n\\n    function getTargetUsdmAmount(address _token) external view returns (uint256);\\n\\n    function inManagerMode() external view returns (bool);\\n\\n    function inPrivateLiquidationMode() external view returns (bool);\\n\\n    function maxGasPrice() external view returns (uint256);\\n\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n\\n    function isLiquidator(address _account) external view returns (bool);\\n\\n    function isManager(address _account) external view returns (bool);\\n\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n\\n    function tokenBalances(address _token) external view returns (uint256);\\n\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n\\n    function setInManagerMode(bool _inManagerMode) external;\\n\\n    function setManager(address _manager, bool _isManager) external;\\n\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n\\n    function setUsdmAmount(address _token, uint256 _amount) external;\\n\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n\\n    function setFundingRate(\\n        uint256 _fundingInterval,\\n        uint256 _fundingRateFactor,\\n        uint256 _stableFundingRateFactor\\n    ) external;\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external;\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _redemptionBps,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdmAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external;\\n\\n    function setPriceFeed(address _priceFeed) external;\\n\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n\\n    function directPoolDeposit(address _token) external;\\n\\n    function buyUSDM(address _token, address _receiver) external returns (uint256);\\n\\n    function sellUSDM(address _token, address _receiver) external returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function increasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external;\\n\\n    function decreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function liquidatePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        address _feeReceiver\\n    ) external;\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function priceFeed() external view returns (address);\\n\\n    function fundingRateFactor() external view returns (uint256);\\n\\n    function stableFundingRateFactor() external view returns (uint256);\\n\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdmDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) external view returns (uint256);\\n\\n    function liquidationFeeUsd() external view returns (uint256);\\n\\n    function taxBasisPoints() external view returns (uint256);\\n\\n    function stableTaxBasisPoints() external view returns (uint256);\\n\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n\\n    function swapFeeBasisPoints() external view returns (uint256);\\n\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n\\n    function marginFeeBasisPoints() external view returns (uint256);\\n\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n\\n    function whitelistedTokens(address _token) external view returns (bool);\\n\\n    function stableTokens(address _token) external view returns (bool);\\n\\n    function shortableTokens(address _token) external view returns (bool);\\n\\n    function feeReserves(address _token) external view returns (uint256);\\n\\n    function globalShortSizes(address _token) external view returns (uint256);\\n\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n\\n    function tokenDecimals(address _token) external view returns (uint256);\\n\\n    function tokenWeights(address _token) external view returns (uint256);\\n\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n\\n    function poolAmounts(address _token) external view returns (uint256);\\n\\n    function bufferAmounts(address _token) external view returns (uint256);\\n\\n    function reservedAmounts(address _token) external view returns (uint256);\\n\\n    function usdmAmounts(address _token) external view returns (uint256);\\n\\n    function maxUsdmAmounts(address _token) external view returns (uint256);\\n\\n    function getRedemptionAmount(address _token, uint256 _usdmAmount) external view returns (uint256);\\n\\n    function getMaxPrice(address _token) external view returns (uint256);\\n\\n    function getMinPrice(address _token) external view returns (uint256);\\n\\n    function getDelta(\\n        address _indexToken,\\n        uint256 _size,\\n        uint256 _averagePrice,\\n        bool _isLong,\\n        uint256 _lastIncreasedTime\\n    ) external view returns (bool, uint256);\\n\\n    function getPosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    )\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            bool,\\n            uint256\\n        );\\n}\\n\",\"keccak256\":\"0xc247c3dc87351e3bdc8dc14694ca7ee035b9e52ccfd7abcfe0f6e59f1d1598e0\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(\\n        address _collateralToken,\\n        address _indexToken\\n    ) external returns (bool);\\n\\n    function validateIncreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external view;\\n\\n    function validateDecreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external view;\\n\\n    function validateLiquidation(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        bool _raise\\n    ) external view returns (uint256, uint256);\\n\\n    function getEntryFundingRate(\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) external view returns (uint256);\\n\\n    function getPositionFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) external view returns (uint256);\\n\\n    function getFundingFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _size,\\n        uint256 _entryFundingRate\\n    ) external view returns (uint256);\\n\\n    function getBuyUsdmFeeBasisPoints(address _token, uint256 _usdmAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getSellUsdmFeeBasisPoints(address _token, uint256 _usdmAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getSwapFeeBasisPoints(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _usdmAmount\\n    ) external view returns (uint256);\\n\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdmDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xafc12294f1c958c02e178106e3db33710a7f4c904f8ef5f1549ceba151427509\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcd6e686bb83826306dfe5831e369ac9f462705a7afe1a18c3c042940a1d59d8a\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x52455e4835fa0f6e8846c56fcd18484b8012049f38b2f465f4374d9316d557a5\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0), \\\"SafeERC20: approve from non-zero to non-zero allowance\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2179c12e4ac50e8a769b1b43f43558f42bf511fcd7236e034c13c6e4450dbe85\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb0ac6523715fd08440082ed1ab1db37b7b5a009f9948c29ce1e63d17171e1ba6\",\"license\":\"MIT\"},\"contracts/libraries/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x223b08d372e9f820805da8b8cbc742bf4c0b7e9fdd1cab8165006ba570ce0b52\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ITimelock {\\n    function setAdmin(address _admin) external;\\n    function enableLeverage(address _vault) external;\\n    function disableLeverage(address _vault) external;\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external;\\n    function signalSetGov(address _target, address _gov) external;\\n}\\n\",\"keccak256\":\"0x5a7543c7b61c11b94a4d04137839a8ab392e2d1dd1ab717755a349366c2eaddd\",\"license\":\"MIT\"},\"contracts/referrals/interfaces/IReferralStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IReferralStorage {\\n    function codeOwners(bytes32 _code) external view returns (address);\\n\\n    function getTraderReferralInfo(address _account) external view returns (bytes32, address);\\n\\n    function setTraderReferralCode(address _account, bytes32 _code) external;\\n\\n    function setTier(\\n        uint256 _tierId,\\n        uint256 _totalRebate,\\n        uint256 _discountShare\\n    ) external;\\n\\n    function setReferrerTier(address _referrer, uint256 _tierId) external;\\n\\n    function govSetCodeOwner(bytes32 _code, address _newAccount) external;\\n}\\n\",\"keccak256\":\"0x990c89b0c80a335cac283f21723c903fafe0fceda2a959922d86829823a87998\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IWETH.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0x29613132c0162f9cdc8336e895d1da9aaf3660909adcf1a0134d714e53524ca4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getTrustedForwarder()": {
        "returns": {
          "forwarder": "The address of the Forwarder contract that is being used."
        }
      },
      "isTrustedForwarder(address)": {
        "params": {
          "forwarder": "The address of the Forwarder contract that is being used."
        },
        "returns": {
          "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getTrustedForwarder()": {
        "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."
      },
      "isTrustedForwarder(address)": {
        "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28968,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 130,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "gov",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2032,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2034,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "vault",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2036,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "shortsTracker",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2038,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "router",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 2040,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "weth",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 2042,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "depositFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2045,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionBufferBps",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2047,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "referralStorage",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 2049,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "positionUtils",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IPositionUtils)24322"
      },
      {
        "astId": 2053,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "feeReserves",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2058,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "maxGlobalLongSizes",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2063,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "maxGlobalShortSizes",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 9441,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "orderBook",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 9443,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "minExecutionFee",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 9445,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "minBlockDelayKeeper",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 9447,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "minTimeDelayPublic",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 9449,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "maxTimeDelay",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 9452,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "isLeverageEnabled",
        "offset": 0,
        "slot": "20",
        "type": "t_bool"
      },
      {
        "astId": 9455,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionRequestKeys",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 9458,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionRequestKeys",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 9461,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionRequestKeysStart",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 9464,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionRequestKeysStart",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      },
      {
        "astId": 9468,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "isPositionKeeper",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9472,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionsIndex",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9476,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionRequests",
        "offset": 0,
        "slot": "27",
        "type": "t_mapping(t_bytes32,t_struct(IncreasePositionRequest)9411_storage)"
      },
      {
        "astId": 9480,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionsIndex",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9484,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionRequests",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_bytes32,t_struct(DecreasePositionRequest)9439_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IPositionUtils)24322": {
        "encoding": "inplace",
        "label": "contract IPositionUtils",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(DecreasePositionRequest)9439_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PositionRouter.DecreasePositionRequest)",
        "numberOfBytes": "32",
        "value": "t_struct(DecreasePositionRequest)9439_storage"
      },
      "t_mapping(t_bytes32,t_struct(IncreasePositionRequest)9411_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PositionRouter.IncreasePositionRequest)",
        "numberOfBytes": "32",
        "value": "t_struct(IncreasePositionRequest)9411_storage"
      },
      "t_struct(DecreasePositionRequest)9439_storage": {
        "encoding": "inplace",
        "label": "struct PositionRouter.DecreasePositionRequest",
        "members": [
          {
            "astId": 9413,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9416,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "path",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 9418,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "indexToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 9420,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "collateralDelta",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 9422,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "sizeDelta",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 9424,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "isLong",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 9426,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "receiver",
            "offset": 1,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 9428,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "acceptablePrice",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 9430,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "minOut",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 9432,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "executionFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 9434,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockNumber",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 9436,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 9438,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "withdrawETH",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(IncreasePositionRequest)9411_storage": {
        "encoding": "inplace",
        "label": "struct PositionRouter.IncreasePositionRequest",
        "members": [
          {
            "astId": 9385,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9388,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "path",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 9390,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "indexToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 9392,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "amountIn",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 9394,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "minOut",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 9396,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "sizeDelta",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 9398,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "isLong",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 9400,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "acceptablePrice",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 9402,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "executionFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 9404,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockNumber",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 9406,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 9408,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "hasCollateralInETH",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 9410,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "orderProps",
            "offset": 0,
            "slot": "12",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}